name: CD

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish-github:
    name: Publish for ${{ matrix.build.OS }} (${{ matrix.build.TARGET }})
    runs-on: ${{ matrix.build.OS }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        build:
          - OS: ubuntu-22.04
            TOOLCHAIN: stable
            TARGET: x86_64-unknown-linux-gnu
            ARGS: ""
          - OS: ubuntu-22.04
            TOOLCHAIN: stable
            TARGET: aarch64-unknown-linux-gnu
            ARGS: ""
          - OS: ubuntu-22.04
            TOOLCHAIN: stable
            TARGET: i686-unknown-linux-gnu
            ARGS: ""
          - OS: windows-2022
            TOOLCHAIN: stable
            TARGET: x86_64-pc-windows-msvc	
            ARGS: ""
          - OS: macos-14
            TOOLCHAIN: stable
            TARGET: x86_64-apple-darwin
            ARGS: ""
          - OS: macos-14
            TOOLCHAIN: stable
            TARGET: aarch64-apple-darwin
            ARGS: ""
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set the release version
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.build.TOOLCHAIN }}
          target: ${{ matrix.build.TARGET }}
          override: true

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.build.OS != 'windows-2022' }}
          command: build
          args: --release --locked --target ${{ matrix.build.TARGET }} ${{ matrix.build.ARGS }}

      - name: Prepare release assets
        shell: bash
        run: |
          mkdir -p release
          cp {LICENSE.md,README.md,CHANGELOG.md} release/
          if [ "${{ matrix.build.OS }}" = "windows-2022" ]; then
            cp target/${{ matrix.build.TARGET }}/release/wireman.exe release/
          else
            cp target/${{ matrix.build.TARGET }}/release/wireman release/
          fi
          mv release/ wireman-${{env.RELEASE_VERSION}}/

      - name: Create release artifacts
        shell: bash
        run: |
          if [ "${{ matrix.build.OS }}" = "windows-2022" ]; then
            7z a -tzip "wireman-${{ env.RELEASE_VERSION }}-${{ matrix.build.TARGET }}.zip" \
              wireman-${{ env.RELEASE_VERSION }}/
          else
            tar -czvf wireman-${{ env.RELEASE_VERSION }}-${{ matrix.build.TARGET }}.tar.gz \
              wireman-${{ env.RELEASE_VERSION }}/
          fi
      
      - name: Upload the binary releases
        uses: svenstaro/upload-release-action@v2
        with:
          file: wireman-${{ env.RELEASE_VERSION }}-${{ matrix.build.TARGET }}*
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}
          release_name: "Release v${{ env.RELEASE_VERSION }}"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
